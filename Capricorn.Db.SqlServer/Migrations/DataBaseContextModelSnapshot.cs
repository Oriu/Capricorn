// <auto-generated />
using System;
using Capricorn.Db.SqlServer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Capricorn.Db.SqlServer.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    partial class DataBaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Capricorn.Logic.Organization.CompanyEntity", b =>
                {
                    b.Property<string>("F_CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("F_COMPANYID")
                        .HasMaxLength(12);

                    b.Property<string>("F_Address")
                        .HasColumnName("F_ADDRESS");

                    b.Property<string>("F_BusinessScope")
                        .HasColumnName("F_BUSINESSSCOPE");

                    b.Property<int?>("F_Category")
                        .HasColumnName("F_CATEGORY");

                    b.Property<string>("F_CityId")
                        .HasColumnName("F_CITYID");

                    b.Property<string>("F_CountyId")
                        .HasColumnName("F_COUNTYID");

                    b.Property<DateTime?>("F_CreateDate")
                        .HasColumnName("F_CREATEDATE");

                    b.Property<string>("F_CreateUserId")
                        .HasColumnName("F_CREATEUSERID");

                    b.Property<string>("F_CreateUserName")
                        .HasColumnName("F_CREATEUSERNAME");

                    b.Property<int?>("F_DeleteMark")
                        .HasColumnName("F_DELETEMARK");

                    b.Property<string>("F_Description")
                        .HasColumnName("F_DESCRIPTION");

                    b.Property<string>("F_Email")
                        .HasColumnName("F_EMAIL");

                    b.Property<string>("F_EnCode")
                        .IsRequired()
                        .HasColumnName("F_ENCODE")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(12);

                    b.Property<int?>("F_EnabledMark")
                        .HasColumnName("F_ENABLEDMARK");

                    b.Property<string>("F_Fax")
                        .HasColumnName("F_FAX");

                    b.Property<DateTime?>("F_FoundedTime")
                        .HasColumnName("F_FOUNDEDTIME");

                    b.Property<string>("F_FullName")
                        .HasColumnName("F_FULLNAME");

                    b.Property<string>("F_InnerPhone")
                        .HasColumnName("F_INNERPHONE");

                    b.Property<string>("F_Leader")
                        .HasColumnName("F_LEADER");

                    b.Property<string>("F_LeaderName")
                        .HasColumnName("F_LEADERNAME");

                    b.Property<string>("F_Manager")
                        .HasColumnName("F_MANAGER");

                    b.Property<string>("F_ManagerDepart")
                        .HasColumnName("F_MANAGERDEPART");

                    b.Property<string>("F_ManagerDepartName")
                        .HasColumnName("F_MANAGERDEPARTNAME");

                    b.Property<string>("F_MangerName")
                        .HasColumnName("F_MANAGERNAME");

                    b.Property<DateTime?>("F_ModifyDate")
                        .HasColumnName("F_MODIFYDATE");

                    b.Property<string>("F_ModifyUserId")
                        .HasColumnName("F_MODIFYUSERID");

                    b.Property<string>("F_ModifyUserName")
                        .HasColumnName("F_MODIFYUSERNAME");

                    b.Property<string>("F_Nature")
                        .HasColumnName("F_NATURE");

                    b.Property<string>("F_OuterPhone")
                        .HasColumnName("F_OUTERPHONE");

                    b.Property<string>("F_ParentId")
                        .HasColumnName("F_PARENTID");

                    b.Property<string>("F_Postalcode")
                        .HasColumnName("F_POSTALCODE");

                    b.Property<string>("F_ProvinceId")
                        .HasColumnName("F_PROVINCEID");

                    b.Property<string>("F_ShortName")
                        .HasColumnName("F_SHORTNAME");

                    b.Property<int?>("F_SortCode")
                        .HasColumnName("F_SORTCODE");

                    b.Property<string>("F_SysManager")
                        .HasColumnName("F_SYSMANAGER");

                    b.Property<string>("F_SysManagerTel")
                        .HasColumnName("F_SYSMANAGERTEL");

                    b.Property<string>("F_WebAddress")
                        .HasColumnName("F_WEBADDRESS");

                    b.HasKey("F_CompanyId");

                    b.ToTable("BASE_COMPANY");
                });

            modelBuilder.Entity("Capricorn.Logic.Organization.DepartmentEntity", b =>
                {
                    b.Property<string>("F_DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("F_DEPARTMENTID");

                    b.Property<string>("F_CompanyId")
                        .HasColumnName("F_COMPANYID");

                    b.Property<DateTime?>("F_CreateDate")
                        .HasColumnName("F_CREATEDATE");

                    b.Property<string>("F_CreateUserId")
                        .HasColumnName("F_CREATEUSERID");

                    b.Property<string>("F_CreateUserName")
                        .HasColumnName("F_CREATEUSERNAME");

                    b.Property<int?>("F_DeleteMark")
                        .HasColumnName("F_DELETEMARK");

                    b.Property<string>("F_Description")
                        .HasColumnName("F_DESCRIPTION");

                    b.Property<string>("F_Email")
                        .HasColumnName("F_EMAIL");

                    b.Property<string>("F_EnCode")
                        .HasColumnName("F_ENCODE");

                    b.Property<int?>("F_EnabledMark")
                        .HasColumnName("F_ENABLEDMARK");

                    b.Property<string>("F_Fax")
                        .HasColumnName("F_FAX");

                    b.Property<string>("F_FullName")
                        .HasColumnName("F_FULLNAME");

                    b.Property<string>("F_InnerPhone")
                        .HasColumnName("F_INNERPHONE");

                    b.Property<string>("F_Manager")
                        .HasColumnName("F_MANAGER");

                    b.Property<string>("F_ManagerDepart")
                        .HasColumnName("F_MANAGERDEPART");

                    b.Property<string>("F_ManagerDepartName")
                        .HasColumnName("F_MANAGERDEPARTNAME");

                    b.Property<string>("F_ManagerName")
                        .HasColumnName("F_MANAGERNAME");

                    b.Property<DateTime?>("F_ModifyDate")
                        .HasColumnName("F_MODIFYDATE");

                    b.Property<string>("F_ModifyUserId")
                        .HasColumnName("F_MODIFYUSERID");

                    b.Property<string>("F_ModifyUserName")
                        .HasColumnName("F_MODIFYUSERNAME");

                    b.Property<string>("F_Nature")
                        .HasColumnName("F_NATURE");

                    b.Property<string>("F_OuterPhone")
                        .HasColumnName("F_OUTERPHONE");

                    b.Property<string>("F_ParentId")
                        .HasColumnName("F_PARENTID");

                    b.Property<string>("F_ShortName")
                        .HasColumnName("F_SHORTNAME");

                    b.Property<int?>("F_SortCode")
                        .HasColumnName("F_SORTCODE");

                    b.HasKey("F_DepartmentId");

                    b.HasIndex("F_CompanyId");

                    b.ToTable("BASE_DEPARTMENT");
                });

            modelBuilder.Entity("Capricorn.Logic.Organization.UserEntity", b =>
                {
                    b.Property<string>("F_UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("F_USERID");

                    b.Property<string>("F_Account")
                        .HasColumnName("F_ACCOUNT");

                    b.Property<DateTime?>("F_AllowEndTime")
                        .HasColumnName("F_ALLOWENDTIME");

                    b.Property<DateTime?>("F_AllowStartTime")
                        .HasColumnName("F_ALLOWSTARTTIME");

                    b.Property<string>("F_AnswerQuestion")
                        .HasColumnName("F_ANSWERQUESTION");

                    b.Property<DateTime?>("F_Birthday")
                        .HasColumnName("F_BIRTHDAY");

                    b.Property<int?>("F_CheckOnLine")
                        .HasColumnName("F_CHECKONLINE");

                    b.Property<string>("F_CompanyId")
                        .HasColumnName("F_COMPANYID");

                    b.Property<DateTime?>("F_CreateDate")
                        .HasColumnName("F_CREATEDATE");

                    b.Property<string>("F_CreateUserId")
                        .HasColumnName("F_CREATEUSERID");

                    b.Property<string>("F_CreateUserName")
                        .HasColumnName("F_CREATEUSERNAME");

                    b.Property<int?>("F_DeleteMark")
                        .HasColumnName("F_DELETEMARK");

                    b.Property<string>("F_DepartmentId")
                        .HasColumnName("F_DEPARTMENTID");

                    b.Property<string>("F_Description")
                        .HasColumnName("F_DESCRIPTION");

                    b.Property<string>("F_Email")
                        .HasColumnName("F_EMAIL");

                    b.Property<string>("F_EnCode")
                        .HasColumnName("F_ENCODE");

                    b.Property<int?>("F_EnabledMark")
                        .HasColumnName("F_ENABLEDMARK");

                    b.Property<int?>("F_Gender")
                        .HasColumnName("F_GENDER");

                    b.Property<string>("F_HeadIcon")
                        .HasColumnName("F_HEADICON");

                    b.Property<DateTime?>("F_LockEndDate")
                        .HasColumnName("F_LOCKENDDATE");

                    b.Property<DateTime?>("F_LockStartDate")
                        .HasColumnName("F_LOCKSTARTDATE");

                    b.Property<string>("F_MSN")
                        .HasColumnName("F_MSN");

                    b.Property<string>("F_Mobile")
                        .HasColumnName("F_MOBILE");

                    b.Property<DateTime?>("F_ModifyDate")
                        .HasColumnName("F_MODIFYDATE");

                    b.Property<string>("F_ModifyUserId")
                        .HasColumnName("F_MODIFYUSERID");

                    b.Property<string>("F_ModifyUserName")
                        .HasColumnName("F_MODIFYUSERNAME");

                    b.Property<string>("F_NickName")
                        .HasColumnName("F_NICKNAME");

                    b.Property<string>("F_OICQ")
                        .HasColumnName("F_OICQ");

                    b.Property<int?>("F_OpenId")
                        .HasColumnName("F_OPENID");

                    b.Property<string>("F_Password")
                        .HasColumnName("F_PASSWORD");

                    b.Property<string>("F_Question")
                        .HasColumnName("F_QUESTION");

                    b.Property<string>("F_QuickQuery")
                        .HasColumnName("F_QUICKQUERY");

                    b.Property<string>("F_RealName")
                        .HasColumnName("F_REALNAME");

                    b.Property<string>("F_Secretkey")
                        .HasColumnName("F_SECRETKEY");

                    b.Property<int?>("F_SecurityLevel")
                        .HasColumnName("F_SECURITYLEVEL");

                    b.Property<string>("F_SimpleSpelling")
                        .HasColumnName("F_SIMPLESPELLING");

                    b.Property<int?>("F_SortCode")
                        .HasColumnName("F_SORTCODE");

                    b.Property<string>("F_Telephone")
                        .HasColumnName("F_TELEPHONE");

                    b.Property<string>("F_WeChat")
                        .HasColumnName("F_WECHAT");

                    b.HasKey("F_UserId");

                    b.ToTable("BASE_USER");
                });

            modelBuilder.Entity("Capricorn.Logic.Organization.DepartmentEntity", b =>
                {
                    b.HasOne("Capricorn.Logic.Organization.CompanyEntity", "CompanyEntity")
                        .WithMany("DepartmentEntitys")
                        .HasForeignKey("F_CompanyId");
                });
#pragma warning restore 612, 618
        }
    }
}
